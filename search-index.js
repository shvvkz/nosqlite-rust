var searchIndex = new Map(JSON.parse('[["nosqlite_rust",{"t":"CCCCCCCHHGPNNNNNNNNNNHNNNNNHHECCCCEECCPPPPPPPPPPPPPPGPNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNEEEECCCCCECCFNNNNNNNONNNNONNNNNONNONNNNNNNNECCFNNNNNNONNNNNNNNNNNNNNNNNECCFNNNNNOONNNNNONNNNNNNNONECCFNNNNNNNNNNHHHFNNNNNNNNNNNNNNNNNNNNNNNNCCCHHHHHHHHHHHHHH","n":["cli","engine","commands","flags","repl","create_collection","list_collections","handle_create_collection","handle_list_collections","CliFlags","Timing","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","fmt","from","from_str","into","parse_and_clean_args","to_owned","try_from","try_into","type_id","vzip","execute_command","start_repl","Nosqlite","error","models","nosqlite","services","NosqliteError","NosqliteErrorHandler","error_type","handler","Base64DecodeError","CollectionAlreadyExists","CollectionNameEmpty","CollectionNotFound","DatabaseAlreadyExists","DatabaseNotFound","DeserializationError","DocumentInvalid","DocumentNotFound","EncryptionError","HexDecodeError","InvalidCollectionStructure","InvalidDatabaseFormat","IoError","NosqliteError","SerializationError","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deserialize","fmt","","from","","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","NosqliteErrorHandler","all_errors","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deserialize","fmt","from","into","log_error","new","serialize","to_owned","try_from","try_into","try_or_log","type_id","vzip","Collection","Database","Document","File","collection","database","document","file","utils","Collection","implem","model","Collection","add_document","all_documents","borrow","borrow_mut","clone","clone_into","clone_to_uninit","created_at","default","delete_documents","deserialize","document_count","documents","fmt","","from","get_document","into","name","new","serialize","structure","to_owned","to_string","try_from","try_into","type_id","update_documents","update_documents_field","vzip","Database","implem","model","Database","add_collection","borrow","borrow_mut","clone","clone_into","clone_to_uninit","collections","default","deserialize","fmt","","from","get_collection","get_collection_mut","into","new","remove_collection","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","Document","implem","model","Document","borrow","borrow_mut","clone","clone_into","clone_to_uninit","created_at","data","default","deserialize","fmt","","from","id","into","new","serialize","to_owned","to_string","try_from","try_into","type_id","updated_at","vzip","File","implem","model","File","borrow","borrow_mut","from","into","load_or_create","save","try_from","try_into","type_id","vzip","get_nested_value","now","validate_against_structure","Nosqlite","borrow","borrow_mut","clone","clone_into","clone_to_uninit","create_collection","delete_collection","delete_documents","fmt","from","get_all_documents","get_document","get_documents","insert_document","into","list_collections","open","to_owned","try_from","try_into","type_id","update_documents","update_documents_field","vzip","collection_service","database_service","document_service","create_collection","delete_collection","get_collection","get_collection_mut","list_collections","load_or_create_database","save_database","delete_documents","get_all_documents","get_document","get_documents","insert_document","update_documents","update_documents_field"],"q":[[0,"nosqlite_rust"],[2,"nosqlite_rust::cli"],[5,"nosqlite_rust::cli::commands"],[7,"nosqlite_rust::cli::commands::create_collection"],[8,"nosqlite_rust::cli::commands::list_collections"],[9,"nosqlite_rust::cli::flags"],[27,"nosqlite_rust::cli::repl"],[29,"nosqlite_rust::engine"],[34,"nosqlite_rust::engine::error"],[38,"nosqlite_rust::engine::error::error_type"],[72,"nosqlite_rust::engine::error::handler"],[92,"nosqlite_rust::engine::models"],[101,"nosqlite_rust::engine::models::collection"],[104,"nosqlite_rust::engine::models::collection::model"],[135,"nosqlite_rust::engine::models::database"],[138,"nosqlite_rust::engine::models::database::model"],[163,"nosqlite_rust::engine::models::document"],[166,"nosqlite_rust::engine::models::document::model"],[190,"nosqlite_rust::engine::models::file"],[193,"nosqlite_rust::engine::models::file::model"],[204,"nosqlite_rust::engine::models::utils"],[207,"nosqlite_rust::engine::nosqlite"],[232,"nosqlite_rust::engine::services"],[235,"nosqlite_rust::engine::services::collection_service"],[240,"nosqlite_rust::engine::services::database_service"],[242,"nosqlite_rust::engine::services::document_service"],[249,"alloc::string"],[250,"core::result"],[251,"core::fmt"],[252,"alloc::vec"],[253,"core::any"],[254,"serde::de"],[255,"std::io::error"],[256,"serde::ser"],[257,"core::ops::function"],[258,"serde_json::value"],[259,"core::option"],[260,"serde_json::map"]],"i":"``````````n0000000000`00000```````````B`0000000000000`0000000000000000000`Bh000000000000000000`````````````C`00000000000000000000000000000````Cl00000000000000000000000````Cd0000000000000000000000````D`000000000````h00000000000000000000000`````````````````","f":"```````{{{d{b}}{d{fh}}}{{l{jj}}}}{{{d{fh}}}{{l{jj}}}}``{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{n}}}n}{{d{d{fc}}}A`{}}{{dAb}A`}{{{d{n}}{d{n}}}Ad}{{{d{n}}{d{fAf}}}Ah}{cc{}}{{{d{b}}}{{l{nc}}}{}}{{}c{}}{{}{{Al{{Aj{n}}{Aj{j}}}}}}{dc{}}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{dAn}{{}c{}}{{{d{b}}{d{fh}}}{{l{jj}}}}{{}A`}`````````````````````````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{B`}}}B`}{{d{d{fc}}}A`{}}{{dAb}A`}{c{{l{B`}}}Bb}{{{d{B`}}{d{fAf}}}Ah}0{BdB`}{cc{}}{{}c{}}{{{d{B`}}c}lBf}{dc{}}{dj}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{dAn}{{}c{}}`{{{d{Bh}}}{{d{{Bj{B`}}}}}}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Bh}}}Bh}{{d{d{fc}}}A`{}}{{dAb}A`}{c{{l{Bh}}}Bb}{{{d{Bh}}{d{fAf}}}Ah}{cc{}}{{}c{}}{{{d{fBh}}B`}A`}{jBh}{{{d{Bh}}c}lBf}{dc{}}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{{{d{fBh}}{l{ce}}g}{{l{cB`}}}{}{}{{Bn{e}{{Bl{B`}}}}}}{dAn}{{}c{}}`````````````{{{d{fC`}}Cb{d{fBh}}}{{l{A`B`}}}}{{{d{C`}}}{{d{{Aj{Cd}}}}}}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{C`}}}C`}{{d{d{fc}}}A`{}}{{dAb}A`}{C`Cf}{{}C`}{{{d{fC`}}{d{b}}{d{Cb}}{d{fBh}}}{{l{A`B`}}}}{c{{l{C`}}}Bb}{{{d{C`}}}Ch}{C`Aj}{{{d{C`}}{d{fAf}}}Ah}0{cc{}}{{{d{C`}}{d{b}}{d{Cb}}}{{Cj{{d{Cd}}}}}}{{}c{}}{C`j}{{jCb}C`}{{{d{C`}}c}lBf}{C`Cb}{dc{}}{dj}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{dAn}{{{d{fC`}}{d{b}}{d{Cb}}Cb{d{fBh}}}{{l{A`B`}}}}{{{d{fC`}}{d{b}}{d{Cb}}{d{b}}Cb{d{fBh}}}{{l{A`B`}}}}{{}c{}}````{{{d{fCl}}{d{b}}Cb{d{fBh}}}{{l{A`B`}}}}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Cl}}}Cl}{{d{d{fc}}}A`{}}{{dAb}A`}{ClAj}{{}Cl}{c{{l{Cl}}}Bb}{{{d{Cl}}{d{fAf}}}Ah}0{cc{}}{{{d{Cl}}{d{b}}}{{Cj{{d{C`}}}}}}{{{d{fCl}}{d{b}}}{{Cj{{d{fC`}}}}}}{{}c{}}{{{d{b}}}Cl}{{{d{fCl}}{d{b}}{d{fBh}}}{{l{A`B`}}}}{{{d{Cl}}c}lBf}{dc{}}{dj}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{dAn}{{}c{}}````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Cd}}}Cd}{{d{d{fc}}}A`{}}{{dAb}A`}{CdCf}{CdCb}{{}Cd}{c{{l{Cd}}}Bb}{{{d{Cd}}{d{fAf}}}Ah}0{cc{}}{Cdj}{{}c{}}{CbCd}{{{d{Cd}}c}lBf}{dc{}}{dj}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{dAn}>{{}c{}}````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}<:{{{d{b}}{d{fBh}}}{{l{ClB`}}}}{{{d{b}}{d{Cl}}{d{fBh}}}{{l{A`B`}}}}7654{{{d{Cb}}{d{b}}}{{Cj{{d{Cb}}}}}}{{}Cf}{{{d{{Cn{jCb}}}}{d{{Cn{jCb}}}}}Ad}`65{{{d{h}}}h}{{d{d{fc}}}A`{}}{{dAb}A`}{{{d{fh}}{d{b}}Cb}{{l{A`B`}}}}{{{d{fh}}{d{b}}}{{l{A`B`}}}}{{{d{fh}}{d{b}}{d{b}}{d{Cb}}}{{l{A`B`}}}}{{{d{h}}{d{fAf}}}Ah}{cc{}}{{{d{fh}}{d{b}}}{{l{{d{{Aj{Cd}}}}B`}}}}{{{d{fh}}{d{b}}{d{b}}{d{Cb}}}{{l{{d{Cd}}B`}}}}{{{d{fh}}{d{b}}{d{b}}{d{b}}}{{l{{Aj{{d{Cd}}}}B`}}}}7{{}c{}}{{{d{h}}}{{Aj{{d{C`}}}}}}{{{d{b}}}{{l{hB`}}}}{dc{}}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{dAn}{{{d{fh}}{d{b}}{d{b}}{d{Cb}}Cb}{{l{A`B`}}}}{{{d{fh}}{d{b}}{d{b}}{d{Cb}}{d{b}}Cb}{{l{A`B`}}}}{{}c{}}```{{{d{fCl}}{d{b}}Cb{d{fBh}}}{{l{A`B`}}}}{{{d{fCl}}{d{b}}{d{fBh}}}{{l{A`B`}}}}{{{d{Cl}}{d{b}}{d{fBh}}}{{l{{d{C`}}B`}}}}{{{d{fCl}}{d{b}}{d{fBh}}}{{l{{d{fC`}}B`}}}}{{{d{Cl}}}{{Aj{{d{C`}}}}}}{{{d{b}}{d{fBh}}}{{l{ClB`}}}}{{{d{b}}{d{Cl}}{d{fBh}}}{{l{A`B`}}}}{{{d{fCl}}{d{b}}{d{b}}{d{Cb}}{d{fBh}}}{{l{A`B`}}}}{{{d{Cl}}{d{b}}{d{fBh}}}{{l{{d{{Aj{Cd}}}}B`}}}}{{{d{Cl}}{d{b}}{d{b}}{d{Cb}}{d{fBh}}}{{l{{d{Cd}}B`}}}}{{{d{Cl}}{d{b}}{d{b}}{d{b}}{d{fBh}}}{{l{{Aj{{d{Cd}}}}B`}}}}:{{{d{fCl}}{d{b}}{d{b}}{d{Cb}}Cb{d{fBh}}}{{l{A`B`}}}}{{{d{fCl}}{d{b}}{d{b}}{d{Cb}}{d{b}}Cb{d{fBh}}}{{l{A`B`}}}}","D":"Jj","p":[[1,"str"],[1,"reference",null,null,1],[0,"mut"],[5,"Nosqlite",207],[5,"String",249],[6,"Result",250,null,1],[6,"CliFlags",9],[1,"unit"],[1,"u8"],[1,"bool"],[5,"Formatter",251],[8,"Result",251],[5,"Vec",252],[1,"tuple",null,null,1],[5,"TypeId",253],[6,"NosqliteError",38],[10,"Deserializer",254],[5,"Error",255],[10,"Serializer",256],[5,"NosqliteErrorHandler",72],[1,"slice"],[17,"Output"],[10,"FnOnce",257],[5,"Collection",104],[6,"Value",258],[5,"Document",166],[1,"u64"],[1,"usize"],[6,"Option",259,null,1],[5,"Database",138],[5,"Map",260],[5,"File",193]],"r":[[29,207],[34,38],[35,72],[92,104],[93,138],[94,166],[95,193],[101,104],[135,138],[163,166],[190,193]],"b":[[60,"impl-Debug-for-NosqliteError"],[61,"impl-Display-for-NosqliteError"],[118,"impl-Debug-for-Collection"],[119,"impl-Display-for-Collection"],[148,"impl-Display-for-Database"],[149,"impl-Debug-for-Database"],[176,"impl-Debug-for-Document"],[177,"impl-Display-for-Document"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKQAHwABAAAAAwAEAAsABwAUAAAAFwAHACMAHABCAAcASwAGAFYAAwBbAAUAYgAGAGwABQB0AAAAdgABAHwAAAB+AAYAhwADAI0ABQCUAAAAlgAAAJ0ACQCoAAYAsAABALQAAAC3AAoAwwABAMkAAwDQAAUA2QAAAOIAAwDoAAMA","P":[[11,"T"],[13,""],[14,"T"],[15,""],[18,"T"],[19,"FromStr::Err"],[20,"U"],[21,""],[22,"T"],[23,"U,T"],[24,"U"],[25,""],[26,"V"],[27,""],[54,"T"],[56,""],[57,"T"],[58,""],[59,"__D"],[60,""],[63,"T"],[64,"U"],[65,"__S"],[66,"T"],[67,""],[68,"U,T"],[69,"U"],[70,""],[71,"V"],[73,""],[74,"T"],[76,""],[77,"T"],[78,""],[79,"__D"],[80,""],[81,"T"],[82,"U"],[83,""],[85,"__S"],[86,"T"],[87,"U,T"],[88,"U"],[89,"T,E,"],[90,""],[91,"V"],[105,""],[107,"T"],[109,""],[110,"T"],[111,""],[115,"__D"],[116,""],[120,"T"],[121,""],[122,"U"],[123,""],[125,"__S"],[126,""],[127,"T"],[128,""],[129,"U,T"],[130,"U"],[131,""],[134,"V"],[139,""],[140,"T"],[142,""],[143,"T"],[144,""],[147,"__D"],[148,""],[150,"T"],[151,""],[153,"U"],[154,""],[156,"__S"],[157,"T"],[158,""],[159,"U,T"],[160,"U"],[161,""],[162,"V"],[167,"T"],[169,""],[170,"T"],[171,""],[175,"__D"],[176,""],[178,"T"],[179,""],[180,"U"],[181,""],[182,"__S"],[183,"T"],[184,""],[185,"U,T"],[186,"U"],[187,""],[189,"V"],[194,"T"],[197,"U"],[198,""],[200,"U,T"],[201,"U"],[202,""],[203,"V"],[204,""],[208,"T"],[210,""],[211,"T"],[212,""],[217,"T"],[218,""],[222,"U"],[223,""],[225,"T"],[226,"U,T"],[227,"U"],[228,""],[231,"V"],[235,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[10556]}