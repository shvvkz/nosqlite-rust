searchState.loadedDescShard("nosqlite_cli", 0, "Engine\nğŸ¦€ Parses and executes the <code>db.createCollection()</code> command â€¦\nğŸ¦€ Handles the <code>db.findDocuments()</code> CLI command.\nParses the CLI arguments for <code>db.findDocuments(...)</code>.\nğŸ¦€ Parses and executes the <code>db.insertDocument()</code> command â€¦\nğŸ¦€ Parses and executes the <code>db.listCollections()</code> command â€¦\nRepresents supported CLI flags like â€“timing\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nParse les flags et renvoie une version propre des â€¦\nError Handling\nModels\nNoSQLite Engine Interface\nServices\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nğŸ¦€ Returns a reference to all errors logged by the â€¦\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nğŸ¦€ Logs an error into the handler, optionally persisting â€¦\nğŸ¦€ Creates a new <code>NosqliteErrorHandler</code> instance with an â€¦\nğŸ¦€ Persists a given <code>NosqliteError</code> to a log file â€¦\nğŸ¦€ Wraps a fallible operation, logs any error using the â€¦\nCollection Model\nğŸ¦€ Represents a collection of documents within a NoSQL â€¦\nğŸ¦€ Attempts to insert a new document into the collection â€¦\nğŸ¦€ Returns a reference to all documents currently stored â€¦\nğŸ¦€ Creates a default <code>Collection</code> instance with the name â€¦\nğŸ¦€ Removes all documents from the collection where a â€¦\nğŸ¦€ Returns the total number of documents stored in the â€¦\nğŸ¦€ Formats the <code>Collection</code> for human-readable display.\nReturns the argument unchanged.\nğŸ¦€ Retrieves the first document from the collection â€¦\nCalls <code>U::from(self)</code>.\nğŸ¦€ Constructs a new, empty <code>Collection</code> with a specified â€¦\nReplaces the contents of all documents in the collection â€¦\nğŸ¦€ Updates a single field in all documents that match a â€¦\nğŸ¦€ Represents a NoSQL-style database containing multiple â€¦\nğŸ¦€ Adds a new collection to the database with a given â€¦\nğŸ¦€ Creates a new default <code>Database</code> instance with no â€¦\nğŸ¦€ Formats the <code>Database</code> for display in a human-readable â€¦\nReturns the argument unchanged.\nğŸ¦€ Retrieves a reference to a collection by its name.\nğŸ¦€ Retrieves a <strong>mutable</strong> reference to a collection by its â€¦\nCalls <code>U::from(self)</code>.\nğŸ¦€ Creates a new, empty <code>Database</code> instance with no â€¦\nğŸ¦€ Removes a collection from the database by its name.\nğŸ¦€ Represents a single document stored in a collection.\nğŸ¦€ Creates a default <code>Document</code> with a unique ID and â€¦\nğŸ¦€ Formats the <code>Document</code> for human-readable output.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nğŸ¦€ Creates a new <code>Document</code> with a unique ID and â€¦\nğŸ¦€ Provides an interface for file-level operations in â€¦\nğŸ¦€ Decrypts a base64-encoded encrypted string using â€¦\nğŸ¦€ Encrypts a plaintext string using AES-256-GCM and â€¦\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nğŸ¦€ Loads the database from disk, or creates a new one if â€¦\nğŸ¦€ Loads a 256-bit AES encryption key from a file, or â€¦\nğŸ¦€ Saves the <code>Database</code> to disk in encrypted form.\nğŸ¦€ Retrieves a nested value from a JSON object using â€¦\nğŸ¦€ Returns the current Unix timestamp in seconds.\nğŸ¦€ Checks if a JSON value matches the expected type â€¦\nğŸ¦€ Validates a JSON document against a given schema â€¦\nğŸ¦€ Persists the current in-memory database state to disk.\nğŸ¦€ Creates a new collection within the current NoSQLite â€¦\nğŸ¦€ Deletes a collection from the current NoSQLite â€¦\nğŸ¦€ Deletes a document from a specified collection by its â€¦\nReturns the argument unchanged.\nğŸ¦€ Retrieves all documents stored in a specified â€¦\nğŸ¦€ Retrieves a document from a collection by its unique â€¦\nğŸ¦€ Retrieves documents matching the specified JSON â€¦\nğŸ¦€ Inserts a new document into a specified collection in â€¦\nCalls <code>U::from(self)</code>.\nğŸ¦€ Lists all collections currently stored in the â€¦\nğŸ¦€ Opens or initializes a new NoSQLite database from the â€¦\nğŸ¦€ Updates all documents in a collection where a given â€¦\nğŸ¦€ Updates a specific field in all documents of a â€¦\nğŸ¦€ Creates a new collection in the database with a â€¦\nğŸ¦€ Removes a collection from the database by its name.\nğŸ¦€ Retrieves an immutable reference to a collection by â€¦\nğŸ¦€ Retrieves a mutable reference to a collection by name â€¦\nğŸ¦€ Lists all collections currently registered in the â€¦\nğŸ¦€ Loads a <code>Database</code> instance from disk, or creates a new â€¦\nğŸ¦€ Saves the current state of the database to disk at â€¦\nğŸ¦€ Deletes a document from a collection by its unique ID.\nğŸ¦€ Returns all documents stored in a specific collection.\nğŸ¦€ Retrieves a document by its ID from a specific â€¦\nğŸ¦€ Retrieves documents matching the specified JSON â€¦\nğŸ¦€ Inserts a new document into the specified collection.\nğŸ¦€ Updates all documents in a given collection that â€¦\nğŸ¦€ Updates a specific field in all documents that match â€¦")